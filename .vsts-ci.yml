resources:
- repo: self
  clean: true 

variables:
  - name: BuildConfiguration
    value: Release
  - name:TeamName
    value: Roslyn
  # The variables `_DotNetArtifactsCategory` and `_DotNetValidationArtifactsCategory` are required for proper publishing of build artifacts. See https://github.com/dotnet/roslyn/pull/38259
  - name: _DotNetArtifactsCategory
    value: .NETCore
  - name: _DotNetValidationArtifactsCategory
    value: .NETCoreValidation

stages:
- stage: build
  displayName: Build and Test
  pool:
    name: VSEng-MicroBuildVS2017
    demands: 
    - cmd

  jobs:
  - job:
  
    steps:
    - task: ms-vseng.MicroBuildTasks.30666190-6959-11e5-9f96-f56098202fef.MicroBuildSigningPlugin@1
      displayName: Install Signing Plugin
      inputs:
        signType: $(SignType)
        esrpSigning: true
      condition: and(succeeded(), ne(variables['SignType'], ''))

    - script: eng\common\CIBuild.cmd 
                -configuration $(BuildConfiguration)
                /p:PB_PublishBlobFeedKey=$(PB_PublishBlobFeedKey)
                /p:OfficialBuildId=$(BUILD.BUILDNUMBER)
                /p:DotNetSignType=$(SignType)
                /p:DotNetSymbolServerTokenMsdl=$(microsoft-symbol-server-pat)
                /p:DotNetSymbolServerTokenSymWeb=$(symweb-symbol-server-pat)
      displayName: Build

    - task: PublishTestResults@1
      displayName: Publish Test Results
      inputs:
        testRunner: XUnit
        testResultsFiles: 'artifacts/TestResults/$(BuildConfiguration)/*.xml'
        mergeTestResults: true
        testRunTitle: 'Unit Tests'
      condition: succeededOrFailed()

    - task: NuGetPublisher@0
      displayName: Publish NuGet Packages to MyGet
      inputs:
        searchPattern: 'artifacts\packages\$(BuildConfiguration)\NonShipping\*.nupkg'
        connectedServiceName: 'RoslynTools NuGet feed'
        nuGetVersion: 4.0.0.2283
      condition: succeeded()
    
    # Note that insertion scripts currently depend on bin directory being uploaded to drops.
    - task: PublishBuildArtifacts@1
      displayName: Publish binaries
      inputs:
        PathtoPublish: 'artifacts\bin'
        ArtifactName: 'bin'
        publishLocation: FilePath
        TargetPath: '$(DropRoot)\$(TeamName)\$(Build.DefinitionName)\$(Build.SourceBranchName)\$(Build.BuildNumber)'
        Parallel: true
        ParallelCount: 64
      condition: succeededOrFailed()
    
    - task: PublishBuildArtifacts@1
      displayName: Publish logs
      inputs:
        PathtoPublish: 'artifacts\log\$(BuildConfiguration)'
        ArtifactName: 'log'
        publishLocation: FilePath
        TargetPath: '$(DropRoot)\$(TeamName)\$(Build.DefinitionName)\$(Build.SourceBranchName)\$(Build.BuildNumber)'
        Parallel: true
        ParallelCount: 64
      condition: succeededOrFailed()
    
    - task: PublishBuildArtifacts@1
      displayName: Publish test results
      inputs:
        PathtoPublish: 'artifacts\TestResults\$(BuildConfiguration)'
        ArtifactName: 'TestResults'
        publishLocation: FilePath
        TargetPath: '$(DropRoot)\$(TeamName)\$(Build.DefinitionName)\$(Build.SourceBranchName)\$(Build.BuildNumber)'
        Parallel: true
        ParallelCount: 64
      condition: succeededOrFailed()
    
    - task: PublishBuildArtifacts@1
      displayName: Publish packages
      inputs:
        PathtoPublish: 'artifacts\packages\$(BuildConfiguration)'
        ArtifactName: 'packages'
        publishLocation: FilePath
        TargetPath: '$(DropRoot)\$(TeamName)\$(Build.DefinitionName)\$(Build.SourceBranchName)\$(Build.BuildNumber)'
        Parallel: true
        ParallelCount: 64
      condition: succeededOrFailed()
    
    - task: ms-vseng.MicroBuildTasks.521a94ea-9e68-468a-8167-6dcf361ea776.MicroBuildCleanup@1
      displayName: Cleanup
      condition: succeededOrFailed()
    
    - task: PublishBuildArtifacts@1
      displayName: Publish MicroBuild Artifacts
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)\MicroBuild\Output'
        ArtifactName: '$(Build.BuildNumber)'
        publishLocation: FilePath
        TargetPath: '$(DropRoot)\$(TeamName)\$(Build.DefinitionName)\$(Build.SourceBranchName)'
      condition: succeededOrFailed()

- ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
  - template: eng\common\templates\post-build\post-build.yml
    parameters:
      # Symbol validation is not entirely reliable as of yet, so should be turned off until
      # https://github.com/dotnet/arcade/issues/2871 is resolved.
      enableSymbolValidation: false
      enableSourceLinkValidation: false
    
